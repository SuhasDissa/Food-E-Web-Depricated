{
  "providers": [],
  "buildImage": "ghcr.io/railwayapp/nixpacks:ubuntu-1684957838",
  "variables": {
    "IS_LARAVEL": "yes",
    "NIXPACKS_METADATA": "php",
    "NIXPACKS_PHP_ROOT_DIR": "/app/public",
    "PORT": "80",
    "APP_NAME": "Food-E",
    "APP_ENV": "production",
    "APP_DEBUG": "true",
    "DB_CONNECTION": "mysql"
  },
  "staticAssets": {
    "Nixpacks/Config/Template.pm": "package Nixpacks::Config::Template;\n\nuse Nixpacks::Nix;\n\nsub if_stmt {\n    my ($condition, $value, $else) = @_;\n\n    if($ENV{$condition} ne \"\") {\n        return $value;\n    } else {\n        return $else;\n    }\n}\n\nsub compile_template {\n    my ($infile, $outfile) = @_;\n    open(FH, '<', $infile) or die \"Could not open configuration file '$infile' $!\";\n    my $out = '';\n    while (<FH>) {\n\n        # If statements\n        s{\n            \\$if\\s*\\((\\w+)\\)\\s*\\(\n                ([\\s\\S]*?)\n            \\)\\s*else\\s*\\(\n                ([\\s\\S]*?)\n            \\)\n        }{if_stmt($1, $2, $3)}egx;\n\n        # Variables\n        s/\\$\\{(\\w+)\\}/$ENV{$1}/eg;\n        \n        # Nix paths\n        s/\\$\\!\\{(\\w+)\\}/Nixpacks::Nix::get_nix_path($1)/eg;\n\n        $out .= $_;\n    }\n    close(FH);\n    open(FH, '>', $outfile) or die \"Could not write configuration file '$outfile' $!\";\n    print FH $out;\n    close(FH);\n}\n\n1;",
    "Nixpacks/Nix.pm": "package Nixpacks::Nix;\n\nsub get_nix_path {\n    my ($exe) = @_;\n    \n    my $path = `which $exe`;\n    $path =~ s/\\n//;\n    my $storePath = `nix-store -q $path`;\n    $storePath =~ s/\\n//;\n    return $storePath;\n}\n\n1;",
    "Nixpacks/Util/ChmodRecursive.pm": "# https://stackoverflow.com/a/3738367\npackage Nixpacks::Util::ChmodRecursive;\n\nuse File::Find;\n\nsub chmod_recursive {\n    my ($dir) = @_;\n    sub wanted\n    {\n        my $perm = -d $File::Find::name ? 0777 : 0666;\n        chmod $perm, $File::Find::name;\n    }\n    find(\\&wanted, $dir);\n}\n\n1;",
    "nginx.template.conf": "worker_processes 5;\ndaemon off;\n\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  4096;  # Default: 1024\n}\n\nhttp {\n    include    $!{nginx}/conf/mime.types;\n    index    index.html index.htm index.php;\n\n    default_type application/octet-stream;\n    log_format   main '$remote_addr - $remote_user [$time_local]  $status '\n        '\"$request\" $body_bytes_sent \"$http_referer\" '\n        '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    access_log /dev/stdout;\n    error_log /dev/stdout;\n    sendfile     on;\n    tcp_nopush   on;\n    server_names_hash_bucket_size 128; # this seems to be required for some vhosts\n\n    server {\n        listen ${PORT};\n        listen [::]:${PORT};\n        server_name localhost;\n\n        $if(NIXPACKS_PHP_ROOT_DIR) (\n            root ${NIXPACKS_PHP_ROOT_DIR};\n        ) else (\n            root /app;\n        )\n     \n        add_header X-Frame-Options \"SAMEORIGIN\";\n        add_header X-Content-Type-Options \"nosniff\";\n     \n        index index.php;\n     \n        charset utf-8;\n     \n        $if(IS_LARAVEL) (\n            location / {\n                try_files $uri $uri/ /index.php?$query_string;\n            }\n        ) else ()\n     \n        location = /favicon.ico { access_log off; log_not_found off; }\n        location = /robots.txt  { access_log off; log_not_found off; }\n     \n        $if(IS_LARAVEL) (\n            error_page 404 /index.php;\n        ) else ()\n     \n        location ~ \\.php$ {\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            include $!{nginx}/conf/fastcgi_params;\n            include $!{nginx}/conf/fastcgi.conf;\n        }\n     \n        location ~ /\\.(?!well-known).* {\n            deny all;\n        }\n    }\n}",
    "php-fpm.conf": "[www]\nlisten = 127.0.0.1:9000\nuser = nobody\npm = dynamic\npm.max_children = 50\npm.min_spare_servers = 4\npm.max_spare_servers = 32\npm.start_servers = 18\nclear_env = no\n",
    "prestart.pl": "#!/usr/bin/env perl\n\nundef $/;\n\nuse FindBin;\nuse lib (\"$FindBin::RealBin\");\n\nuse File::Find;\nuse Nixpacks::Config::Template;\nuse Nixpacks::Util::ChmodRecursive;\n\n\nNixpacks::Util::ChmodRecursive::chmod_recursive(\"/app/storage\") if -e \"/app/storage\";\n\nif ($#ARGV != 1) {\n    print STDERR \"Usage: $0 <config-file> <output-file>\\n\";\n    exit 1;\n}\n\nNixpacks::Config::Template::compile_template($ARGV[0], $ARGV[1]);\nmy $port = $ENV{\"PORT\"};\nprint \"Server starting on port $port\\n\";"
  },
  "phases": {
    "build": {
      "dependsOn": [
        "install"
      ],
      "cmds": [
        "npm run build",
        "php artisan config:cache",
        "php artisan route:cache",
        "php artisan view:cache"
      ]
    },
    "install": {
      "dependsOn": [
        "setup"
      ],
      "cmds": [
        "mkdir -p /var/log/nginx && mkdir -p /var/cache/nginx",
        "composer install --ignore-platform-reqs --optimize-autoloader --no-dev",
        "npm ci"
      ]
    },
    "setup": {
      "nixPkgs": [
        "(php81.withExtensions (pe: pe.enabled ++ []))",
        "perl",
        "nginx",
        "libmysqlclient",
        "php81Packages.composer",
        "nodejs-16_x",
        "npm-8_x"
      ],
      "nixLibs": [
        "libmysqlclient"
      ],
      "nixOverlays": [
        "https://github.com/railwayapp/nix-npm-overlay/archive/main.tar.gz"
      ],
      "nixpkgsArchive": "293a28df6d7ff3dec1e61e37cc4ee6e6c0fb0847"
    }
  },
  "start": {
    "cmd": "perl /assets/prestart.pl /assets/nginx.template.conf /nginx.conf && (php-fpm -y /assets/php-fpm.conf & nginx -c /nginx.conf)"
  }
}